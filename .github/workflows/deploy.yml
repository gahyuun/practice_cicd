name: Publish Package

on:
  push:
    branches:
      - main

jobs:
  version-check-and-publish:
    runs-on: ubuntu-latest
    steps:
      # GitHub Actions에서 공식적으로 제공하는 액션
      # 워크플로우에서 현재 레포지토리의 코드를 가져오는 역할
      # 워크플로우 실행되는 가상머신에는 저장소 소스 코드가 없으니까 복사
      - name: Checkout repository
        uses: actions/checkout@v3

      # 가상머신에 nodejs 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
          registry-url: 'https://registry.npmjs.org/'

      # 워크플로우 실행 속도를 향상시키고, 불필요한 의존성 다운로드를 줄이도록
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      # 워크플로우 실행되는 가상머신에 ci
      - name: Install dependencies
        run: npm ci

      # 버전 비교하고 업데이트 해야하는지 판단
      - name: Check for version update
        id: check_version
        run: |
          LATEST_VERSION=$(npm show $(jq -r '.name' package.json) version)

          CURRENT_VERSION=$(jq -r '.version' package.json)

          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            exit 0
          # If를 열면 if를 닫는거 
          fi

          echo "::set-output name=version_updated::true"

      # 퍼블리싱하기
      - name: Publish package to npm
        if: steps.check_version.outputs.version_updated == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TEST_TOKEN }}
        run: npm publish --access public

      - name: Trigger webhook
        if: steps.check_version.outputs.version_updated == 'true'
        run: |
          curl -X POST -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/gahyuun/practice_cicd2/dispatches \
          -d '{"event_type": "fetch-ax-updated"}'
